{"version":3,"sources":["components/ToDoItem.jsx","components/ToDoForm.jsx","components/ToDo.jsx","index.jsx"],"names":["ToDoItem","props","item","onCheck","onRemove","className","checked","onChange","id","style","name","description","type","onClick","DeleteOutlined","Item","Form","ToDoForm","onSubmit","layout","onFinish","values","label","pattern","title","htmlType","ToDo","useState","todos","setTodos","ids","setIds","numUnCheckedTodos","setNumUnCheckedTodos","index","findIndex","todo","calculateTotalUncheckedTodos","totalUnCheckedTodos","filter","length","splice","map","renderItems","span","danger","uncheckedTodos","class","Header","Layout","Footer","Content","App","offset","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e426976.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Checkbox, Button} from 'antd';\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\n\r\nexport const ToDoItem = (props) => {\r\n    const { item, onCheck, onRemove } = props;\r\n    const check = () => {\r\n        onCheck(item.id);\r\n        \r\n    }\r\n    \r\n    const remove = () => {\r\n        onRemove(item.id)\r\n    }\r\n\r\n    return (\r\n       <li className={'todo-item'} >\r\n            <Checkbox checked={item.checked} onChange={check}  \r\n            style={{'textDecorationLine': item.checked ? 'line-through' : 'none','color' : 'blue', 'textDecorationColor': \r\n            item.checked ? 'color':'red'} }>{item.name}{item.description}</Checkbox>\r\n            \r\n            <Button type = \"danger\" onClick={remove}><DeleteOutlined /></Button>\r\n        </li>\r\n        \r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Form, Input, Button} from 'antd'\r\n\r\nconst {Item} = Form;\r\n\r\nexport const ToDoForm = (props) => {\r\n    const {onSubmit} = props;\r\n    const finish = (values) => {\r\n        onSubmit(values.name, values.description)\r\n    }\r\n\r\n    return(\r\n        <Form className={'todo-form'} layout={'horizontal'} onFinish={finish}>\r\n            <Item name={'name'} label=\"Title\" >\r\n                <Input pattern=\"^[A-Z][a-zA-Z0-9]{2,}\" title=\"3 characters minimum, must start with capital letter\" />\r\n            </Item>\r\n            <Item description={'description'} label=\"Description\">\r\n                <Input pattern=\"^[A-Z][a-zA-Z0-9]{2,}\" title=\"3 characters minimum, must start with capital letter\" /> \r\n            </Item>\r\n            <Item>\r\n                <Button htmlType={'submit'}>Add</Button>\r\n            </Item>\r\n        </Form>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Card, Divider, Col, Row, Button } from 'antd';\r\nimport { ToDoItem } from './ToDoItem';\r\nimport { ToDoForm } from './ToDoForm';\r\n\r\n\r\n\r\nexport const ToDo = () => {\r\n    const [todos, setTodos] = useState([{id: 1, name: 'todo 1', description:' :des 1', checked: false},\r\n                                        {id: 2, name: 'todo 2', description:' :des 1', checked: false}]);\r\n    \r\n    const [ids, setIds] = useState(10);\r\n\r\n    const [ numUnCheckedTodos, setNumUnCheckedTodos ] = useState(0);\r\n\r\n    \r\n    const onCheck =(id) => {\r\n        const index = todos.findIndex(todo=> todo.id === id);\r\n        const todo = todos[index];\r\n                                        \r\n        todo.checked = !todo.checked;\r\n        setTodos([...todos]);\r\n        calculateTotalUncheckedTodos();\r\n    }\r\n\r\n    const calculateTotalUncheckedTodos = () => {\r\n        // Calculate Total UnChecked Todos\r\n        const totalUnCheckedTodos = todos.filter(todo => todo.checked === false);\r\n        setNumUnCheckedTodos(totalUnCheckedTodos.length);\r\n    }\r\n\r\n    const onRemove = (id) => {\r\n        const index = todos.findIndex(todo=> todo.id === id);\r\n    \r\n        todos.splice(index, 1);\r\n        setTodos([...todos]);\r\n        calculateTotalUncheckedTodos();\r\n    }\r\n\r\n\r\n    const onSubmit = (name, description) => {\r\n        const totalUnCheckedTodos = todos.filter(todo => todo.checked === false);\r\n        setNumUnCheckedTodos(totalUnCheckedTodos.length + 1);\r\n        const todo = {\r\n            id: ids,\r\n            name,\r\n            description,\r\n            checked: false\r\n        };\r\n        setTodos([...todos, todo]);\r\n        setIds(ids + 1);\r\n        \r\n    }\r\n\r\n    const removeAllChecked = () => {\r\n        // filter the original array to get all unchecked\r\n        if (todos.length > 0) {\r\n            // Filtering will return an array of unchecked todos\r\n            const uncheckedTodos = todos.filter(todo => todo.checked === false);\r\n            // Now set the unchecked Todos to be the new todos\r\n            setTodos(uncheckedTodos);\r\n\r\n            calculateTotalUncheckedTodos();\r\n        }\r\n    }\r\n\r\n    const renderItems = (todos) => {\r\n        if (!todos.length) {\r\n            return (\r\n                <ul className={'todo-list'}>\r\n                    <li className={'todo-item'} >\r\n                        Are You Ready To Start A Todo List?\r\n                    </li>\r\n                </ul>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <ul className={'todo-list'}>\r\n                { todos.map(todo=>{\r\n                    return <ToDoItem item={todo} onCheck={onCheck} onRemove={onRemove}/>\r\n                })}\r\n            </ul>\r\n        )\r\n \r\n    \r\n    }\r\n    return(\r\n        <Card title={'My Todo List'}>\r\n            <ToDoForm onSubmit={onSubmit} />\r\n            <Divider />\r\n            { renderItems(todos) }\r\n            <Divider />\r\n            <Row>\r\n                <Col span=\"12\">\r\n                    <Button \r\n                        type=\"primary\" \r\n                        danger\r\n                        onClick={removeAllChecked}\r\n                    >\r\n                        Remove All Checked\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span=\"12\">\r\n                    <ul class=\"ant-list-items\">\r\n                        <li class=\"ant-list-item\">Total UnChecked Todos: <strong>{ numUnCheckedTodos }</strong></li>\r\n                        \r\n                        <li class=\"ant-list-item\">Total Todos: <strong>{ todos.length }</strong></li>\r\n                    </ul>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Layout, Row, Col }  from 'antd';\r\nimport { ToDo } from './components/ToDo';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\n\r\nconst { Header, Footer, Content} = Layout;\r\n\r\nconst App =() =>{\r\n    return (\r\n        <Layout>\r\n            <Header></Header> \r\n            <Content>\r\n                <Row>\r\n                    <Col span={12} offset={6}>\r\n                        <ToDo />\r\n                    </Col>\r\n                </Row>\r\n            </Content>\r\n            <Footer></Footer>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}